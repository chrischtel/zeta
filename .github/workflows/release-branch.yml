name: Release Branch Workflow

on:
  push:
    branches:
      - 'release/**'
  workflow_dispatch:
    inputs:
      finalize:
        description: 'Finalize the release (merge to main)'
        required: false
        default: false
        type: boolean

jobs:
  ci:
    uses: ./.github/workflows/ci.yml
    secrets: inherit

  prepare-beta:
    needs: ci
    if: ${{ !inputs.finalize }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Bump beta version
        shell: pwsh
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          ./release.ps1 patch -PreReleaseType beta
          
          git push --follow-tags
  
  finalize-release:
    needs: ci
    if: ${{ inputs.finalize }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Finalize version (remove pre-release)
        id: finalize
        shell: pwsh
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Extract version without pre-release info
          $branchName = git rev-parse --abbrev-ref HEAD
          $versionPattern = 'const VERSION = "([\d\.]+)[^"]*"'
          $buildContent = Get-Content -Path "build.zig" -Raw
          $baseVersion = [regex]::Match($buildContent, $versionPattern).Groups[1].Value
          
          # Set output for later steps
          echo "version=$baseVersion" >> $env:GITHUB_OUTPUT
          
          # Update files with final version
          ./release.ps1 none # Don't increment, just remove pre-release info
          
          git push --follow-tags
      - name: Create PR to main
        uses: peter-evans/create-pull-request@v5
        with:
          title: "Release ${{ steps.finalize.outputs.version }}"
          body: "Finalize release for version ${{ steps.finalize.outputs.version }}"
          branch: "auto-pr-release-to-main"
          base: "main"
