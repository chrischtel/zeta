name: Build and Upload Release Assets

on:
  workflow_call:
    inputs:
      upload_url:
        required: true
        type: string
      ref_name:
        required: true
        type: string

jobs:
  build_and_upload:
    strategy:
      fail-fast: false  # Don't fail all builds if one fails
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux-x86_64
          - os: macos-latest
            platform: macos-aarch64
          - os: macos-latest
            platform: macos-x86_64
          - os: windows-latest
            platform: windows-x86_64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.14.0
      
      - name: Install Dependencies on Windows
        if: ${{ runner.os == 'Windows' }}
        uses: crazy-max/ghaction-chocolatey@v3.3.0
        with:
          args: install 7zip
      
      - name: Build
        run: zig build build-${{ matrix.platform }} -Doptimize=ReleaseFast
        
      - name: Verify Build Output
        shell: bash
        run: |
          if [ ! -d "zig-out/bin/${{ matrix.platform }}" ]; then
            echo "Build output directory not found! Expected: zig-out/bin/${{ matrix.platform }}"
            find zig-out -type d | sort
            exit 1
          fi
          
          echo "Build output contents:"
          find zig-out/bin/${{ matrix.platform }} -type f | sort
          
          if [ -z "$(find zig-out/bin/${{ matrix.platform }} -type f -name "*")" ]; then
            echo "No build outputs found!"
            exit 1
          fi
      
      - name: Package binaries
        id: package
        shell: bash
        run: |
          mkdir -p dist
          
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            EXT=".exe"
            ARCHIVE_EXT=".zip"
            ARCHIVE_CMD="7z a -tzip"
            CONTENT_TYPE="application/zip"
          else
            EXT=""
            ARCHIVE_EXT=".tar.gz"
            ARCHIVE_CMD="tar czf"
            CONTENT_TYPE="application/gzip"
          fi
          
          # Copy all binaries to dist with correct extension
          mkdir -p dist/bin
          find zig-out/bin/${{ matrix.platform }} -type f -executable -exec cp {} dist/bin/ \;
          
          # Create complete package
          cd dist
          $ARCHIVE_CMD zeta-${{ matrix.platform }}$ARCHIVE_EXT bin
          cd ..
          
          echo "archive_path=dist/zeta-${{ matrix.platform }}$ARCHIVE_EXT" >> $GITHUB_OUTPUT
          echo "archive_name=zeta-${{ inputs.ref_name }}-${{ matrix.platform }}$ARCHIVE_EXT" >> $GITHUB_OUTPUT
          echo "content_type=$CONTENT_TYPE" >> $GITHUB_OUTPUT
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ inputs.upload_url }}
          asset_path: ${{ steps.package.outputs.archive_path || format('./dist/zeta-{0}{1}', matrix.platform, runner.os == 'Windows' && '.zip' || '.tar.gz') }}
          asset_name: ${{ steps.package.outputs.archive_name || format('zeta-{0}-{1}{2}', inputs.ref_name, matrix.platform, runner.os == 'Windows' && '.zip' || '.tar.gz') }}
          asset_content_type: ${{ steps.package.outputs.content_type || (runner.os == 'Windows' && 'application/zip' || 'application/gzip') }}
