name: Finalize Release

on:
  workflow_dispatch:
    inputs:
      releaseBranch:
        description: 'Release branch to finalize (e.g., release/1.2.0)'
        required: true

jobs:
  finalize:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.releaseBranch }}
          fetch-depth: 0
          
      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.14.0
      
      - name: Run Tests
        run: zig build test
        
      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions"
      
      - name: Promote to final release
        shell: pwsh
        run: |
          ./release.ps1 promote -FromPreRelease
      
      - name: Extract Version
        id: extract_version
        shell: pwsh
        run: |
          $versionLine = Select-String -Path "build.zig" -Pattern 'const VERSION'
          if ($versionLine -match 'const VERSION = "(.*?)"') {
            $version = $Matches[1]
            echo "version=$version" >> $env:GITHUB_OUTPUT
          }
      
      - name: Merge to main
        run: |
          git checkout main
          git pull
          git merge --no-ff ${{ github.event.inputs.releaseBranch }} -m "Release: v${{ steps.extract_version.outputs.version }}"
          git push origin main
      
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.extract_version.outputs.version }}"
          name: "Release: v${{ steps.extract_version.outputs.version }}"
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
      
      - name: Merge back to develop
        run: |
          git checkout develop
          git pull
          git merge --no-ff ${{ github.event.inputs.releaseBranch }} -m "Merge release v${{ steps.extract_version.outputs.version }} back to develop"
          git push origin develop
  
  build-and-upload:
    needs: finalize
    uses: ./.github/workflows/build-and-upload-release.yml
    with:
      upload_url: ${{ needs.finalize.outputs.upload_url }}
      ref_name: ${{ needs.finalize.outputs.version }}
    secrets: inherit
